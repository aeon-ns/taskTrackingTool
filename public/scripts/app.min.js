"use strict";angular.module("taskTool",["ui.router","ngResource"]).config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("login",{url:"/",templateUrl:"../views/login.html",controller:"LoginController"}).state("home",{url:"/home",templateUrl:"../views/home.html",controller:"HomeController"}).state("newTask",{url:"/newTask",templateUrl:"../views/task.html",controller:"TaskController"}),t.otherwise("/")}]),angular.module("taskTool").controller("LoginController",["$scope","regService","loginService",function(e,t,o){e.user={username:"",password:""},e.reason="",e.login=function(){e.regSuccess=e.regFail=e.loginFail=!1,e.user.username&&e.user.password&&o.signIn(e.user.username,e.user.password)},e.register=function(){e.regSuccess=e.regFail=e.loginFail=!1,e.user.username&&e.user.password&&e.user.cpassword&&e.user.password==e.user.cpassword&&t.signUp(e.user.username,e.user.password)},e.$on("reg-success",function(t,o){e.regSuccess=!0,e.loginMode=!0,t.preventDefault()}),e.$on("reg-fail",function(t,o){e.regFail=!0,console.log(o),409==o.status&&(e.reason=o.data.msg),t.preventDefault()}),e.$on("login-fail",function(t,o){e.loginFail=!0,t.preventDefault()})}]).filter("timeElapsed",function(){return function(e){var t=new Date(e),o=Date.now()-t.getTime(),s="";return s=o<1e3?" milliseconds":o/1e3<60?1==(o=parseInt(o/1e3,10))?" second":" seconds":o/6e4<60?1==(o=parseInt(o/6e4,10))?" minute":" minutes":1==(o=parseInt(o/36e5,10))?" hour":" hours",o+s+" ago"}}).controller("HomeController",["$scope","myTasks","publicTasks","logoutService",function(e,t,o,s){e.public=!1,e.err=!1,e.tasks=t.get(),e.showPublic=function(){e.public=!0,e.tasks=o.get()},e.showMyTasks=function(){e.public=!1,e.tasks=t.get()},e.logout=function(){s.logOut()},e.$on("task-error",function(t,o){e.err=!0,e.msg=o.data.msg}),e.$on("mytasks-ready",function(t,o){e.public||(e.tasks=o),e.err=!1}),e.$on("public-tasks-ready",function(t,o){e.public&&(e.tasks=o),e.err=!1})}]).controller("TaskController",["$scope","resources","myTasks","publicTasks","$state","logoutService",function(e,t,o,s,r,n){e.task={deadline:new Date,private:"public"},e.logout=function(){n.logOut()},e.submit=function(){e.task.private&&(e.task.private="private"==e.task.private),console.log("submit"),console.log(e.task),t.getMyTaskResource().save(JSON.stringify(e.task)).$promise.then(function(e){console.log("saved"),o.startFetching(),s.startFetching(),r.transitionTo("home")},function(t){e.$parent.$broadcast("task-error",t)})}}]),angular.module("taskTool").constant("BASE_URL","http://localhost:3000/").factory("$localStorage",["$window",function(e){return{store:function(t,o){e.localStorage[t]=o},fetch:function(t,o){return e.localStorage[t]||o},storeObj:function(t,o){e.localStorage[t]=JSON.stringify(o)},fetchObj:function(t,o){return JSON.parse(e.localStorage[t]||o)}}}]).factory("token",["$localStorage",function(e){var t=null,o=!1;return{set:function(s,r){t=s,e.store("token",t),o=r},get:function(){return o?t:t=e.fetch("token",null)}}}]).factory("resources",["BASE_URL","$resource","token",function(e,t,o){var s={};return s.getLoginResource=function(){return t(e+"users/signin",null,{save:{method:"POST"}})},s.getLogoutResource=function(){return t(e+"users/signout",null,{get:{method:"GET",headers:{"x-access-token":o.get()}}})},s.getRegisterResource=function(){return t(e+"users/register",null,{save:{method:"POST"}})},s.getMyTaskResource=function(){return t(e+"tasks/:id",null,{get:{method:"GET",headers:{"x-access-token":o.get()},isArray:!0},save:{method:"POST",headers:{"x-access-token":o.get()}}})},s.getPublicTaskResource=function(){return t(e+"tasks/public",null,{get:{method:"GET",headers:{"x-access-token":o.get()},isArray:!0}})},s}]).factory("myTasks",["resources","$rootScope",function(e,t){var o={},s=null,r=function(){e.getMyTaskResource().get().$promise.then(function(e){s=e,t.$broadcast("mytasks-ready",s)},function(e){t.$broadcast("task-error",e)})};return o.reset=function(){s=null},o.get=function(){return null==s&&r(),s||[]},o.startFetching=r,o}]).factory("publicTasks",["resources","$rootScope",function(e,t){var o={},s=null,r=function(){e.getPublicTaskResource().get().$promise.then(function(e){s=e,t.$broadcast("public-tasks-ready",s)},function(e){t.$broadcast("task-error",e)})};return o.get=function(){return null==s&&r(),s||[]},o.reset=function(){s=null},o.startFetching=r,o}]).service("loginService",["resources","token","$rootScope","$state","myTasks","publicTasks",function(e,t,o,s,r,n){var u=e.getLoginResource();this.signIn=function(e,a){var i={username:e,password:a};u.save(JSON.stringify(i)).$promise.then(function(e){t.set(e.token,!0),r.startFetching(),n.startFetching(),s.transitionTo("home")},function(e){o.$broadcast("login-fail",e)})}}]).service("logoutService",["resources","$state","$timeout","token","myTasks","publicTasks",function(e,t,o,s,r,n){this.logOut=function(){e.getLogoutResource().get(),s.set(null,!1),r.reset(),n.reset(),o(function(){t.transitionTo("login")},10)}}]).service("regService",["resources","$rootScope",function(e,t){var o=e.getRegisterResource();this.signUp=function(e,s){var r={username:e,password:s};o.save(JSON.stringify(r)).$promise.then(function(e){console.log("Registered Successfully!"),t.$broadcast("reg-success",r)},function(e){console.log("Registration Failed!"),t.$broadcast("reg-fail",e)})}}]);